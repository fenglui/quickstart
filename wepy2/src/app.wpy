<style lang="scss">
.container {
  height: 100%;
  // display: flex;
  // flex-direction: column;
  // align-items: center;
  // justify-content: space-between;
  // box-sizing: border-box;
}
</style>

<script>
import wepy from '@wepy/core';
import promisify  from '@wepy/use-promisify';
import eventHub from './common/eventHub';
import vuex from '@wepy/x';
wepy.use(promisify);
wepy.use(vuex);

wepy.app({
  // 定义要添加生命周期到 app 或者 page 或者 component
  // lifecycle: {
  //   // 值类型为：String 或者 Array 或者 Function
  //   // 值为需要添加的生命周期一个或者多个函数名，或者返回生命周期的函数数组的方法
  //   app: 'onSomeTime', // 给 App 添加一个 `onSomeTime` 生命周期函数
  //   page: ['onTime1', 'onTime2'], // 给 Page 添加两个生命周期函数
  //   component: function (lifecycles) {  
  //     // 删除 Component 最后一个生命周期函数
  //     lifecycles.pop()
  //     retrun lifecycles;
  //   }
  // },
  hooks: {
    // App 级别 hook，对整个 App 生效
    // 同时存在 Page hook 和 App hook 时，优先执行 Page hook，返回值再交由 App hook 处
    'before-setData': function (dirty) {
      console.log('setData dirty: ', dirty);
      return dirty;
    }
  },
  globalData: {
    userInfo: null
  },

  onLaunch() {
    this.testAsync();
    eventHub.$on('app-launch', (...args) => {
      console.log('app-launch event emitted, the params are:');
      console.log(args);
    });
  },

  methods: {

    sleep (s) {
      return new Promise((resolve, reject) => {
        setTimeout(() => {
          resolve('promise resolved')
        }, s * 1000)
      })
    },

    async testAsync () {
      let d = await this.sleep(3);
      console.log(d);
    }
  }
});
</script>
<config>
{
    pages: [
      'pages/home/index',
      'pages/index'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'WeChat',
      navigationBarTextStyle: 'black'
    },
    usingComponents: {
    }
}
</config>
